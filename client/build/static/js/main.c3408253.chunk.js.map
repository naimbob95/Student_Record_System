{"version":3,"sources":["components/create-student.components.js","components/edit-student.components.js","components/StudentTableRow.js","components/student-list.components.js","App.js","serviceWorker.js","index.js"],"names":["CreateStudent","props","onChangeStudentName","bind","onChangeStudentEmail","onChangeStudentAge","onChangeStudentNumber","onSubmit","state","name","email","age","StudentNumber","e","this","setState","target","value","preventDefault","studentObject","axios","post","then","res","console","log","data","window","location","className","Form","Group","controlId","Label","Control","type","onChange","required","Button","variant","size","block","Component","EditStudent","Age","get","match","params","id","catch","error","put","StudentTableRow","deleteStudent","delete","obj","_id","to","onClick","StudentList","students","map","i","key","Table","striped","bordered","hover","DataTable","App","Navbar","bg","expand","Container","Brand","Nav","Row","Col","md","exact","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c3408253.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateStudent extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    // Setting up functions\r\n    this.onChangeStudentName = this.onChangeStudentName.bind(this);\r\n    this.onChangeStudentEmail = this.onChangeStudentEmail.bind(this);\r\n    this.onChangeStudentAge = this.onChangeStudentAge.bind(this);\r\n    this.onChangeStudentNumber = this.onChangeStudentNumber.bind(this);\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    // Setting up state\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      age: '',\r\n      StudentNumber: ''\r\n    }\r\n  }\r\n\r\n  onChangeStudentName(e) {\r\n    this.setState({ name: e.target.value })\r\n  }\r\n\r\n  onChangeStudentEmail(e) {\r\n    this.setState({ email: e.target.value })\r\n  }\r\n\r\n  onChangeStudentAge(e) {\r\n    this.setState({ age: e.target.value })\r\n  }\r\n  onChangeStudentNumber(e) {\r\n    this.setState({ StudentNumber: e.target.value })\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    const studentObject = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      age : this.state.age,\r\n      StudentNumber: this.state.StudentNumber\r\n    };\r\n    axios.post('http://localhost:4000/students/create-student', studentObject)\r\n      .then(res => console.log(res.data));\r\n\r\n    // this.setState({ name: '', email: '', age:'',StudentNumber: '' })\r\n\r\n    window.location = '/';\r\n  }\r\n\r\n  render() {\r\n    return (<div className=\"form-wrapper\">\r\n      <Form onSubmit={this.onSubmit}>\r\n        <Form.Group controlId=\"Name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control type=\"text\" value={this.state.name} onChange={this.onChangeStudentName} required/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control type=\"email\" value={this.state.email} onChange={this.onChangeStudentEmail} required/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Age\">\r\n          <Form.Label>Age</Form.Label>\r\n          <Form.Control type=\"number\" value={this.state.age} onChange={this.onChangeStudentAge} required />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"RollNo\">\r\n          <Form.Label>Student Roll No</Form.Label>\r\n          <Form.Control type=\"text\" value={this.state.StudentNumber} onChange={this.onChangeStudentNumber} required />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"danger\" size=\"lg\" block=\"block\" type=\"submit\">\r\n          Create Student\r\n        </Button>\r\n      </Form>\r\n    </div>);\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport axios from 'axios';\r\n\r\nexport default class EditStudent extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.onChangeStudentName = this.onChangeStudentName.bind(this);\r\n    this.onChangeStudentEmail = this.onChangeStudentEmail.bind(this);\r\n    this.onChangeStudentAge = this.onChangeStudentAge.bind(this);\r\n    this.onChangeStudentNumber = this.onChangeStudentNumber.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    // State\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      Age: '',\r\n      StudentNumber: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:4000/students/edit-student/' + this.props.match.params.id)\r\n      .then(res => {\r\n        this.setState({\r\n          name: res.data.name,\r\n          email: res.data.email,\r\n          age: res.data.age,\r\n          StudentNumber: res.data.StudentNumber\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  onChangeStudentName(e) {\r\n    this.setState({ name: e.target.value })\r\n  }\r\n\r\n  onChangeStudentEmail(e) {\r\n    this.setState({ email: e.target.value })\r\n  }\r\n\r\n  onChangeStudentAge(e) {\r\n    this.setState({ age: e.target.value })\r\n  }\r\n\r\n  onChangeStudentNumber(e) {\r\n    this.setState({ StudentNumber: e.target.value })\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    const studentObject = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      age: this.state.age,\r\n      StudentNumber: this.state.StudentNumber\r\n    };\r\n\r\n    axios.put('http://localhost:4000/students/update-student/' + this.props.match.params.id, studentObject)\r\n      .then((res) => {\r\n        console.log(res.data)\r\n        console.log('Student successfully updated')\r\n      }).catch((error) => {\r\n        console.log(error)\r\n      })\r\n\r\n    // Redirect to Student List \r\n    // this.props.history.push('/student-list')\r\n    window.location = '/';\r\n   \r\n  }\r\n\r\n\r\n  render() {\r\n    return (<div className=\"form-wrapper\">\r\n      <Form onSubmit={this.onSubmit}>\r\n        <Form.Group controlId=\"Name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control type=\"text\" value={this.state.name} onChange={this.onChangeStudentName} required/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control type=\"email\" value={this.state.email} onChange={this.onChangeStudentEmail}required />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Age\">\r\n          <Form.Label>Age</Form.Label>\r\n          <Form.Control type=\"number\" value={this.state.age} onChange={this.onChangeStudentAge} required/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Name\">\r\n          <Form.Label>Student Roll No</Form.Label>\r\n          <Form.Control type=\"text\" value={this.state.StudentNumber} onChange={this.onChangeStudentNumber} required />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"danger\" size=\"lg\" block=\"block\" type=\"submit\">\r\n          Update Student\r\n        </Button>\r\n      </Form>\r\n    </div>);\r\n  }\r\n}   ","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport  axios from 'axios';\r\n\r\nexport default class StudentTableRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.deleteStudent = this.deleteStudent.bind(this);\r\n    }\r\n\r\n    deleteStudent() {\r\n        axios.delete('http://localhost:4000/students/delete-student/' + this.props.obj._id)\r\n            .then((res) => {\r\n                console.log('Student successfully deleted!')\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n            window.location = '/';\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.obj.name}</td>\r\n                <td>{this.props.obj.email}</td>\r\n                <td>{this.props.obj.age}</td>\r\n                <td>{this.props.obj.StudentNumber}</td>\r\n                <td>\r\n                    <Link className=\"btn btn-secondary\"  to={\"/edit-student/\" + this.props.obj._id}>\r\n                     Edit\r\n                    </Link> &nbsp; \r\n                    <Button onClick={this.deleteStudent} variant=\"danger\"> Delete</Button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport Table from 'react-bootstrap/Table';\r\nimport StudentTableRow from './StudentTableRow';\r\n\r\n\r\nexport default class StudentList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      students: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:4000/students/')\r\n      .then(res => {\r\n        this.setState({\r\n          students: res.data\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  DataTable() {\r\n    return this.state.students.map((res, i) => {\r\n      return <StudentTableRow obj={res} key={i} />;\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (<div className=\"table-wrapper\">\r\n      <Table striped bordered hover variant=\"dark\" >\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Age</th>\r\n            <th>Student Roll No</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.DataTable()}\r\n        </tbody>\r\n      </Table>\r\n    </div>);\r\n  }\r\n}","import React from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport CreateStudent from \"./components/create-student.components\";\nimport EditStudent from \"./components/edit-student.components\";\nimport StudentList from \"./components/student-list.components\";\n\nfunction App() {\n  return (\n  <Router> \n    <div className=\"App\">\n     \n      <Navbar  bg=\"dark\" variant=\"dark\" expand=\"lg\">\n          <Container>\n\n            <Navbar.Brand>\n              <Link to={\"/student-list\"} className=\"nav-link\">\n                Students Records\n              </Link>\n            </Navbar.Brand>\n\n            <Nav className=\"justify-content-end\">\n              <Nav>\n                <Link to={\"/create-student\"} className=\"nav-link\">\n                  Create Student\n                </Link>\n              </Nav>\n\n              {/* <Nav>\n                <Link to={\"/edit-student/:id\"} className=\"nav-link\">\n                  Edit Student\n                </Link>\n              </Nav> */}\n\n              <Nav>\n                <Link to={\"/student-list\"} className=\"nav-link\">\n                  Student List\n                </Link>\n              </Nav>\n            </Nav>\n\n          </Container>\n        </Navbar>\n        \n        <header className=\"App-header\">\n      <Container>\n     \n        <Row>\n          <Col md={12}>\n            <div className=\"wrapper\">\n              <Switch>\n                <Route exact path='/' component={StudentList} />\n                <Route path=\"/create-student\" component={CreateStudent} />\n                <Route path=\"/edit-student/:id\" component={EditStudent} />\n                <Route path=\"/student-list\" component={StudentList} />\n              </Switch>\n            </div>\n          </Col>\n        </Row>\n        \n      </Container>\n      </header>\n    </div>\n   \n  </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}